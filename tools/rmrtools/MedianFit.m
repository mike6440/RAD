function [tau, xmed, ymed, ylin] = MedianFit(x, y);%function          tau = MedianFit(amass, N);%===============================================================%input% amass% N %==============================================================%reynolds, 990806d2r = pi/180;%===============% LINEAR FIT LINE%==============p = polyfit(x,y,1);%===========% MEDIAN FIT%=============spread = std(y - median(y));fprintf('original spread = %.3f\n',spread);% initialize the loopalpha = 0;delalpha = 1;signalpha = -1;spread1 = spread;%===============% LOOP AND CONVERGE FOR MIN SPREAD%===============for i = 1:40	% increment new loop	% rotation angle	alpha = alpha + delalpha*signalpha;	% rotation matrix	R = [cos(alpha * d2r)  -sin(alpha * d2r)		sin(alpha * d2r) cos(alpha * d2r)];	% original values	xx = [x y];	% rotated values	xr = xx * R;	xp = xr(:,1);	yp = xr(:,2);	spread2 = std(yp - median(yp));	% compute new error	err = 100 * (spread2 - spread1) / spread1;	% reverse path if min passed	if sign(spread2 - spread1) ~= signalpha,		signalpha = -1 * signalpha;		delalpha = delalpha / 2;	end	spread1 = spread2;% 	fprintf('Alpha = %.1f, spread = %.3f, err = %.1f\n',alpha, spread2, err);% 	fprintf('del_alpha = %.6f\n',delalpha);	if delalpha < .01, break, endendfprintf('Loop count = %d\n',i);% with this value of alpha, the median xp = [0 median(yp)]; % zero crossing in trans coord sys%Rotate back to original coor sysx1 = xp / R;% line slope is alpham = tan(alpha * d2r);% zero crossingb = x1(2) - x1(1) .* m;% median line to plotxmed = [0; 12];ymed = polyval([m,b]',xmed);ylin = polyval(p,xmed);% the Zero crossingI0 = exp(ymed(1));% The negative of the slope is tautau = -m;return