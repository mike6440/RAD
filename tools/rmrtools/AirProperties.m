function   [rho,Tv,q] =  AirProperties(T, RH, P)%AIRPROPERTIES --  compute density, virtual temp, specific humidity, vap press%   [rho,Tv,q] =  AirProperties(T, RH, P)%*******************************************************************%input%  T -- air temperature (C)%  RH -- %RH%  P -- barometric pressure (mbar), (optional, default = 1013)%%output%	rho -- air density (kg/m^3)%  Tv -- virtual temperature (C)%   q -- specific humidity (kg/kg)%   e -- vapor pressure  (mbar)%reynolds 981031% v 002 rmr 061101 -- time to refresh this tired puppy%*******************************************************************if nargin == 2,  P = 1013;  end%convert to Pascals% Pa = P * 100;%convert T to T kelvinTk = T + 273.15 * ones(size(T));%%% COMPUTE SATURATED VAPOR PRESSURE (PA)c = ones(length(T),1) * 17.2694;d = ones(length(T),1) * 237.3;nx = find(T < 0);if length(nx) > 0    c(nx) = 21.875 * ones(length(nx),1);    d(nx) = 265.5 * ones(length(nx),1);end%esat = 6.11 * ones(length(T),1) .* exp(c .* T  ./ (T + d)); % mbaresat = 6.11 * exp(c .* T  ./ (T + d)); % mbar%%%% COMPUTE SATURATED MIXING RATIOwsat = 0.622 .* esat ./ (P - esat);w = (RH ./ 100) .* wsat;				% kg/kg%%%% COMPUTE THE SPECIFIC HUMIDITYq = w ./ (ones(size(w)) + w);   % kg/kg%%% VIRTUAL TEMPERATURE -- if degC came in, return degCTv = Tk .* (1 + 0.61 .* w);  % degK% moist air equation of staterho = (P .* 100) ./ 287 ./ Tv;  % kg/m^3Tv = Tv - 273.15 * ones(size(Tv));  % degCreturn;